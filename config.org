#+title: Literate configuration for emacs

* packages 
Install packages with package install selected packages
#+BEGIN_SRC emacs-lisp
(setq package-selected-packages '(projectile rjsx-mode js2-mode yasnippet-snippets yasnippet web-mode which-key lsp-mode dracula-theme company))
#+END_SRC
* Look and feel
Set the theme and the font through the customize options available in emacs.
#+BEGIN_SRC emacs-lisp
  ;; toolbar, menubar, scrollbar
  (tool-bar-mode 0)
  (scroll-bar-mode 0)
  (menu-bar-mode 0)
  ;; fonts
  ;; (set-face-attribute 'default nil :font "Iosevka Nerd Font 13")
   (set-face-attribute 'default nil :font "JetBrainsMono Nerd Font 13")
  ;; load theme
  (load-theme 'tango-dark t)
  ;; line numbers
  (global-display-line-numbers-mode t)
  (setq display-line-numbers-type 'relative) ;;relative line numbers

  ;; thin cursor
  (setq-default cursor-type 'bar)
#+End_SRC
* Melpa
Emacs only has the GNU Elpa repositories (free software) but almost nothing is available in those repositories, Melpa is a little bit better because almost every plugin and theme is there, so configure melpa is a must.
#+BEGIN_SRC emacs-lisp
  ;; use melpa
  (require 'package)
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (package-initialize)
#+end_src

* Projectile
I find project.el and projectile very similar, however neither can replace the other, so its better have both
#+BEGIN_SRC emacs-lisp
  ;; Projectile
  (projectile-mode +1)
  ;;key map
  (define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)
#+END_SRC

* LSP
Lsp is optional but very helpfull at the time of programing in diferent programing languages. In this case I've only set up for java development.
#+BEGIN_SRC emacs-lisp
  ;;LSP
  (require 'lsp-mode)

  (setq lsp-keymap-prefix "s-i")
  (define-key lsp-mode-map (kbd "s-i") lsp-command-map)

  (with-eval-after-load 'lsp-mode
    (add-hook 'lsp-mode-hook #'lsp-enable-which-key-integration))

					  ;  (require 'lsp-java)
					  ;(add-hook 'java-mode-hook #'lsp)
#+END_SRC

* Wich Key
Show you the keys for certain commands.
#+BEGIN_SRC emacs-lisp
  ;;which key
  (require 'which-key)
  (which-key-mode)
  (which-key-setup-side-window-bottom)
#+END_SRC

* Company Mode
Provides a little popup for autocompletion like and IDE or vscode.
#+BEGIN_SRC emacs-lisp
;;  (require 'company)
  (add-hook 'after-init-hook 'global-company-mode)
  (with-eval-after-load 'company
    (define-key company-active-map (kbd "M-/") #'company-complete))
  (with-eval-after-load 'company-complete
    (define-key company-active-map
      (kbd "TAB")
      #'company-complete-common-or-cycle)
    (define-key company-active-map
      (kbd "<backtab>")
      (lambda ()
	(interactive)
	(company-complete-common-or-cycle -1))))
  (with-eval-after-load 'company
    (define-key company-active-map (kbd "M-.") #'company-show-location)
    (define-key company-active-map (kbd "RET") nil))
#+END_SRC

* Org mode
its org mode
#+BEGIN_SRC emacs-lisp
  (setq org-startup-folded t)
#+END_SRC

* Web mode
#+BEGIN_SRC emacs-lisp
  (require 'web-mode)
  (add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.css\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.js\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.php\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.[agj]sp\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))

  ;;hooks for web mode
  (defun my-web-mode-hook()
    (setq web-mode-markup-indent-offset 2)
    (setq web-mode-css-indent-offset 2)
    (setq web-mode-code-indent-offset 2)
    ;;Auto pair
    (setq web-mode-enable-auto-pairing t)
    ;;CSS colorization
    (setq web-mode-enable-css-colorization t)
    )


  (add-hook 'web-mode-hook 'my-web-mode-hook)




#+END_SRC

* Yasnnipet
#+BEGIN_SRC emacs-lisp
  (require 'yasnippet)
  (yas-global-mode 1)
#+END_SRC

* Javascript
#+BEGIN_SRC emacs-lisp
  ;; Enable major mode for javascript editing
  (add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))
					  ;enable for shell scripts via node.js
  (add-to-list 'interpreter-mode-alist '("node" . js2-mode))
#+END_SRC
